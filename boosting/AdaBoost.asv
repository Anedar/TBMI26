% Load face and non-face data and plot a few examples
load faces;
load nonfaces;
faces = double(faces);
nonfaces = double(nonfaces);

figure(1);
colormap gray;
for k=1:25
    subplot(5,5,k), imagesc(faces(:,:,10*k));
    axis image;
    axis off;
end

figure(2);
colormap gray;
for k=1:25
    subplot(5,5,k), imagesc(nonfaces(:,:,10*k));
    axis image;
    axis off;
end

% Generate Haar feature masks
nbrHaarFeatures = 25;
haarFeatureMasks = GenerateHaarFeatureMasks(nbrHaarFeatures);

figure(3);
colormap gray;
for k = 1:25
    subplot(5,5,k),imagesc(haarFeatureMasks(:,:,k),[-1 2]);
    axis image;
    axis off;
end

% Create a training data set with a number of training data examples
% from each class. Non-faces = class label y=-1, faces = class label y=1
nbrTrainExamples = 35;
trainImages = cat(3,faces(:,:,1:nbrTrainExamples),nonfaces(:,:,1:nbrTrainExamples));
xTrain = ExtractHaarFeatures(trainImages,haarFeatureMasks);
yTrain = [ones(1,nbrTrainExamples), -ones(1,nbrTrainExamples)];

%% Implement the AdaBoost training here
%  Use your implementation of WeakClassifier and WeakClassifierError
t = zeros(size(xTrain,1),size(xTrain,2)+1);
for j = 1:size(xTrain,1)
    for i=2:size(t,2)-1
        t(j,i) = xTrain(j,i-1) + (xTrain(j,i)-xTrain(j,i-1))/2;
    end
    t(j,1) = xTrain(j,1)/2;
    t(j,end) = xTrain(j,end)+(xTrain(j,end)-xTrain(j,end-1))/2;
end

nbrWeakClassifiers = 11;
d = 1/size(xTrain,2)*ones(1,size(xTrain,2)); %startvikter
alpha = zeros(1,nbrWeakClassifiers);

for k = 1:nbrWeakClassifiers
    epsmin = inf; %startepsilon
    eps = [inf, 0, 0, 0];
    for i = 1:size(xTrain,1)
        P=1;
        for j = 1:size(t,2)
            C = WeakClassifier(t(i,j),P,xTrain(i,:));
            eps = WeakClassifierError(C,d,yTrain);
            if eps > 0.5
                eps = 1 - eps;
                P = -P;
            end
            if eps < epsmin(1)
                epsmin = [eps, i, j];
                Cmin = C;
                
            end
        end
    end
    epsmin(1)
    alpha(k) = 1/2*log((1-epsmin(1))/epsmin(1));
    Cmin = 2*not(Cmin==yTrain)-1;
    d = d.*exp(alpha(k)*Cmin);
    d = 1/sum(d)*d;
end
%% Extract test data

nbrTestExamples = 3;

testImages  = cat(3,faces(:,:,(nbrTrainExamples+1):(nbrTrainExamples+nbrTestExamples)),...
                    nonfaces(:,:,(nbrTrainExamples+1):(nbrTrainExamples+nbrTestExamples)));
xTest = ExtractHaarFeatures(testImages,haarFeatureMasks);
yTest = [ones(1,nbrTestExamples), -ones(1,nbrTestExamples)];

%% Evaluate your strong classifier here
%  You can evaluate on the training data if you want, but you CANNOT use
%  this as a performance metric since it is biased. You MUST use the test
%  data to truly evaluate the strong classifier.



%% Plot the error of the strong classifier as  function of the number of weak classifiers.
%  Note: you can find this error without re-training with a different
%  number of weak classifiers.


